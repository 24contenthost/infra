name: Deploy MySQL Infrastructure

on:
  workflow_dispatch:

jobs:
  deploy_mysql:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy docker-compose.yml and init.sh to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          source: "./db/docker-compose.yml,./db/init.sh"
          target: "$HOME"

      - name: Deploy and Debug MySQL (Run docker-compose, initialize and debug env variables)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            # Debug environment variables
            echo "MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD"
            echo "MYSQL_USER: $MYSQL_USER"
            echo "MYSQL_PASSWORD: $MYSQL_PASSWORD"
            echo "MYSQL_COMPOSE_NAME: $MYSQL_COMPOSE_NAME"
            echo "MYSQL_CONTAINER_NAME: $MYSQL_CONTAINER_NAME"
            echo "MYSQL_DATABASE_GALLERY: $MYSQL_DATABASE_GALLERY"
            
            # Navigate to the db folder and initialize
            cd ~/db
            
            docker-compose pull
            
            docker-compose up -d
          
            echo "Waiting for MySQL to start..."
            until docker exec $MYSQL_CONTAINER_NAME mysqladmin ping --silent; do
             sleep 1
            done
            echo "MySQL is ready!"
            #
            ## Создание базы данных для галереи
            #echo "Creating database for gallery..."
            #docker exec $MYSQL_CONTAINER_NAME mysql -u root -p${MYSQL_ROOT_PASSWORD} -e "CREATE DATABASE IF NOT EXISTS \`${MYSQL_DATABASE_GALLERY}\`;"
            #
            ## Создание пользователя и предоставление прав
            #echo "Creating user and granting privileges..."
            #docker exec $MYSQL_CONTAINER_NAME mysql -u root -p${MYSQL_ROOT_PASSWORD} -e "CREATE USER IF NOT EXISTS '${MYSQL_USER}'@'%' IDENTIFIED BY '${MYSQL_PASSWORD}';"
            #docker exec $MYSQL_CONTAINER_NAME mysql -u root -p${MYSQL_ROOT_PASSWORD} -e "GRANT ALL PRIVILEGES ON \`${MYSQL_DATABASE_GALLERY}\`.* TO '${MYSQL_USER}'@'%';"
            #docker exec $MYSQL_CONTAINER_NAME mysql -u root -p${MYSQL_ROOT_PASSWORD} -e "FLUSH PRIVILEGES;"
            #
            #echo "Database and user initialization completed."
        

        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_COMPOSE_NAME: ${{ secrets.MYSQL_COMPOSE_NAME }}
          MYSQL_CONTAINER_NAME: ${{ secrets.MYSQL_CONTAINER_NAME }}
          MYSQL_DATABASE_GALLERY: ${{ secrets.MYSQL_DATABASE_GALLERY }}
